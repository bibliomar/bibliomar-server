# This doesn't actually work because of the spring.jpa.properties.javax.persistence.schema-generation properties.
spring.jpa.hibernate.ddl-auto=validate
spring.datasource.url=${env.MYSQL_URL}
spring.datasource.username=${env.MYSQL_USERNAME}
spring.datasource.password=${env.MYSQL_PASSWORD}
debug=true
server.error.include-binding-errors=always
server.error.include-message=always
spring.main.allow-bean-definition-overriding=true
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
jwt.secret=${env.JWT_SECRET}
password.secret=${env.PASSWORD_SECRET}
bibliomar.client.url=${env.BIBLIOMAR_CLIENT_URL}
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${env.EMAIL_USERNAME}
spring.mail.password=${env.EMAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=create.sql


# thymeleaf (to render mail only)
spring.thymeleaf.check-template-location=true
spring.thymeleaf.prefix=classpath:/emails_templates/
spring.thymeleaf.suffix=.html
